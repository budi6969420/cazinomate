spring.datasource.url=jdbc:postgresql://localhost:5432/postgresdb
spring.datasource.username=postgres_user
spring.datasource.password=postgres_pass
server.port=8080
spring.jpa.hibernate.ddl-auto=update

keycloak.server-url=${KEYCLOAK_SERVER_URL:http://localhost:9090}
keycloak.admin-realm=${KEYCLOAK_ADMIN_REALM:master}
keycloak.realm=${KEYCLOAK_REALM:LF12}
keycloak.admin-client-id=${KEYCLOAK_ADMIN_CLIENT_ID:admin-cli}
keycloak.normal-client-id=${KEYCLOAK_NORMAL_CLIENT_ID:lf12}
keycloak.admin-username=${KEYCLOAK_ADMIN_USERNAME:admin}
keycloak.admin-password=${KEYCLOAK_ADMIN_PASSWORD:admin}

stripe.secret.key=sk_test_51QwjWaKOd91jh7IZTIED2RbHwZnq6Rnd6tpbMWqSnG7IvqpWR6wHix7vjXDOug3BRIuSiWQdMOh1hzZG5yRSN3Bj00ceG2xRez
stripe.webhook.secret=whsec_ZRdxcIm12M686tejBdq6AMhGSQJrGJeS

spring.application.name=lf12_starter
#client registration configuration
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_NORMAL_CLIENT_ID:lf12}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid

#OIDC provider configuration:
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:9090/realms/LF12}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
logging.level.org.springframework.security=DEBUG
#validating JWT token against our Keycloak server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:9090/realms/LF12}

springdoc.swagger-ui.path=swagger
springdoc.swagger-ui.try-it-out-enabled=true

